# Launch EC2 Instances
- name: Ansible test
  hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3
    disk_size: 100
    expireon: "{{ ansible_date_time.date }}"
    key_name: gskygrogan_cmdemo
  tasks:
    - name: launching ops manager instance
      ec2:
        profile: default
        instance_type: t3.xlarge
        image: ami-07efac79022b86107 
        wait: yes
        count: 1 
        assign_public_ip: yes
        vpc_subnet_id: subnet-53f0df19
        region: us-east-2
        key_name: "{{ key_name }}"
        volumes:
          - device_name: /dev/xvdb
            volume_type: gp2
            volume_size: "{{ disk_size }}"
        instance_tags:
          Name: mside_launched_om_instances
          owner: "{{ ownerUserName }}"
          expire-on: "{{ expireon }}"
          purpose: "training"
      register: ec2
    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.dns_name }}"
        dns_name_pub: "{{ item.dns_name }}"
        groupname: launched
      with_items: "{{ ec2.instances }}"
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"

- hosts: launched
  remote_user: ubuntu
  become: yes
  vars_files:
    - deployConfig.json
  vars:
    disk_size: 100
    mdb_community_link: "https://repo.mongodb.org/apt/ubuntu/dists/focal/mongodb-org/4.4/multiverse/binary-amd64/mongodb-org-server_4.4.6_amd64.deb"
    om_download_link: "https://downloads.mongodb.com/on-prem-mms/deb/mongodb-mms_4.4.14.100.20210610T1502Z-1_x86_64.deb"
  tasks:
    - debug:
        msg: "Hostnames: {{ dns_name_pub }}"
    - name: Install MongoDB Enterprise dependencies
      apt:
        pkg: 
          - libcurl4
          - libgssapi-krb5-2
          - libkrb5-dbg
          - libldap-2.4-2
          - libwrap0
          - libpci3
          - libsasl2-2
          - libsasl2-modules
          - libsasl2-modules-gssapi-mit
          - snmp
          - openssl
          - liblzma5
          - libsensors5
        update_cache: yes
    - name: Disable THP - copy service file
      copy:
        src: thp.service
        dest: /lib/systemd/system/thp.service
        owner: root
        group: root
        mode: '0644'
    - name: Disable THP - reload daemon
      systemd:
        state: restarted
        daemon_reload: yes
        name: thp
        enabled: yes
    - name: Create data directory
      file:
        path: /data
        state: directory
    - name: Create a new primary partition
      parted:
        device: /dev/xvdb
        number: 1
        flags: [ lvm ]
        state: present
    - name: Create volume group for MongoDB data volume
      lvg:
        vg: mdb-vg
        pvs: /dev/xvdb1
        state: present
    - name: Create logical volume for MongoDB data volume
      lvol:
        vg: mdb-vg
        lv: mdb-lv
        state: present
        shrink: no
        size: "{{ disk_size|int - 2 }}G"
    - name: Create xfs filesystem
      filesystem:
        fstype: xfs
        dev: /dev/mdb-vg/mdb-lv
    - name: Mount MongoDB data directory
      mount:
        path: /data
        src: /dev/mdb-vg/mdb-lv
        fstype: xfs
        state: mounted
    - name: Create directory for app db
      file:
        path: /data/appdb
        state: directory
    - name: Create data directory for oplog db
      file:
        path: /data/oplogdb
        state: directory
    - name: Create data directory for blockstore db
      file:
        path: /data/blockstoredb
        state: directory
    - name: Create data directory for headdb
      file:
        path: /data/headdb
        state: directory
    - name: Change owner of MongoDB data directory for appdb
      file:
        path: /data/appdb
        owner: mongodb
        group: mongodb
    - name: Change owner of MongoDB data directory for oplogdb
      file:
        path: /data/oplogdb
        owner: mongodb
        group: mongodb
    - name: Change owner of MongoDB data directory for blockstoredb
      file:
        path: /data/blockstoredb
        owner: mongodb
        group: mongodb
    - name: Change owner of MongoDB data directory for headdb
      file:
        path: /data/headdb
        owner: mongodb
        group: mongodb
    ## TODO: set this up with some proper DNS since public hostname on aws instances can change after reboot! Or just use private dns name... idk...
    - name: set hostname
      hostname:
        name: "{{ dns_name_pub }}"
    # install mongodb
    - name: Install MongoDB community (for app/oplog/blockstore databases)
      apt:
        deb: "{{ mdb_community_link }}"
    # download and install ops manager
    - name: Install ops manager
      apt:
        deb: "{{ om_download_link }}"
    # create conf files for each of the three databases
    - name: Write mongo config files
      template:
        src: omPlaybookConfAppDB.j2
        dest: /etc/mongod-appdb.conf
        mode: '0644'
    - name: Write mongo config files
      template:
        src: omPlaybookConfBlockstoreDB.j2
        dest: /etc/mongod-blockstoredb.conf
        mode: '0644'
    - name: Write mongo config files
      template:
        src: omPlaybookConfOplogDB.j2
        dest: /etc/mongod-oplogdb.conf
        mode: '0644'
    # create services for each of the three databases
    - name: AppDB Service File
      template:
        src: omPlaybookDBServiceAppDB.j2
        dest: /lib/systemd/system/mongod-appdb.service
        mode: '0644'
    - name: OplogDB Service File
      template:
        src: omPlaybookDBServiceOplogDB.j2
        dest: /lib/systemd/system/mongod-oplogdb.service
        mode: '0644'
    - name: Blockstore Service File
      template:
        src: omPlaybookDBServiceBlockstoreDB.j2
        dest: /lib/systemd/system/mongod-blockstoredb.service
        mode: '0644'
    # start and enable mongod services
    - name: Start and enable AppDB
      systemd:
        state: started
        daemon_reload: yes
        name: mongod-appdb
        enabled: yes
    - name: Start and enable OplogDB
      systemd:
        state: started
        name: mongod-oplog
        enabled: yes
    - name: Start and enable BlockstoreDB
      systemd:
        state: started
        name: mongod-blockstore
        enabled: yes
    # start and enable ops manager service
    - name: Start ops manager service
      systemd:
        state: started
        enabled: yes